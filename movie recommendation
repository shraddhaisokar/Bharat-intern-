import numpy as np
import pandas as pd


movies = pd.read_csv("tmdb_5000_movies.csv")
credits = pd.read_csv("tmdb_5000_credits.csv")

movies.head()



movies = movies.merge(credits,on='title')

movies.head()

movies = movies[['movie_id','title','overview','genres','keywords','cast','crew']]


import ast

def convert(text):
    L = []
    for i in ast.literal_eval(text):
        L.append(i['name'])
    return L

movies.dropna(inplace=True)

movies['genres'] = movies['genres'].apply(convert)
movies.head()

movies['cast'] = movies['cast'].apply(convert)

movies['keywords'] = movies['keywords'].apply(convert)

movies['crew'] = movies['crew'].apply(convert)


movies.head()

movies['cast'] = movies['cast'].apply(lambda x:x[0:3])

def fetch_director(text):
    L = []
    for i in ast.literal_eval(text):
        if i['job'] == 'Director':
            L.append(i['name'])
    return L

def removespace(L):
    L1 = []
    for i in L:
        L1.append(i.replace(" ",""))
    return L1

movies['cast'] = movies['cast'].apply(removespace)
movies['keywords'] = movies['keywords'].apply(removespace)
movies['crew'] = movies['crew'].apply(removespace)
movies['genres'] = movies['genres'].apply(removespace)

movies.head()


def split_list(my_list,n):
    return [my_list[i:i +n] for i in range(0, len(my_list), n)]

split_list(movies['overview'],4296)



movies['tags']= movies["overview"]+movies['genres']+movies['keywords']+movies['cast']+movies['crew']

new =movies.drop(columns = ['overview','genres','keywords','cast','crew','movie_id'])

new.head()

new['tags'] = new['tags'].apply(lambda x: " ".join(x))
new.head()

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features=5000,stop_words='english')

vector = cv.fit_transform(new['tags']).toarray()

vector.shape

from sklearn.metrics.pairwise import cosine_similarity

similarity = cosine_similarity(vector)

similarity

def recommend(movie):
    index = new[new['title'] == movie].index[0]
    distances = sorted(list(enumerate(similarity[index])),reverse=True,key = lambda x: x[1])
    for i in distances[1:6]:
        print(new.iloc[i[0]].title)

recommend("Avatar")

recommend("Spectre")

recommend("Skyfall")
